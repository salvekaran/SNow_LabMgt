<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json,application/xml,text/xml</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>POST</http_method>
        <name>updateInstanceStatus</name>
        <operation_script><![CDATA[(function process( /*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

    var req = request.body.data;
    var instance = req.instance;
    var instanceState = req.instanceState;
    var instanceOS = req.instanceOS;
    var instanceIP = req.instanceIP;
    var instanceParent = req.instanceParent;

    if (instance != '') {
        if (instanceParent == '') {
            var recGR = new GlideRecord('x_snc_lab_man_student_instances');
            recGR.addQuery('url', 'CONTAINS', instance);
            recGR.query();
            if (recGR.next()) {
                if (instanceState == 'Definition' || instanceState == 'ICE' || instanceState == 'Ready to Configure' || instanceState == 'Terminated' || instanceState == 'Timed Out') {
                    recGR.reserved = true;
                } else {
                    if (recGR.email_address == '') {
                        recGR.reserved = false;
                    }
                    if (instanceState == "Stopped") {
                        instanceState = "Hibernating";
                    }
                }
                if (instanceOS != 'ServiceNow') {
                    recGR.url = instanceIP + ' | ' + instance;
                }
                recGR.state = instanceState;
                recGR.update();
            }
        } else {
            var recGR2 = new GlideRecord('x_snc_lab_man_paired_instances');
            recGR2.addQuery('url', 'CONTAINS', instance);
            recGR2.query();
            if (recGR2.next()) {
                if (instanceOS != 'ServiceNow') {
                    recGR2.url = instanceIP + ' | ' + instance;
                }
                recGR2.state = instanceState;
                recGR2.update();
            }
        }
    }
})(request, response);]]></operation_script>
        <operation_uri>/api/x_snc_lab_man/lab_management/updateInstanceStatus</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/updateInstanceStatus</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>false</requires_authentication>
        <requires_snc_internal_role>true</requires_snc_internal_role>
        <short_description/>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-06-17 19:13:26</sys_created_on>
        <sys_id>0d212c3591f07c507f448671db544416</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>updateInstanceStatus</sys_name>
        <sys_package display_value="Lab Management" source="x_snc_lab_man">f24888cc5cf400107f442a8e9a094ba4</sys_package>
        <sys_policy/>
        <sys_scope display_value="Lab Management">f24888cc5cf400107f442a8e9a094ba4</sys_scope>
        <sys_update_name>sys_ws_operation_0d212c3591f07c507f448671db544416</sys_update_name>
        <sys_updated_by>system</sys_updated_by>
        <sys_updated_on>2023-08-24 15:55:24</sys_updated_on>
        <web_service_definition display_value="CL: Lab Management">0aa987a2d17020107f447d062fd3d813</web_service_definition>
        <web_service_version/>
    </sys_ws_operation>
</record_update>
