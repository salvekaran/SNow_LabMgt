<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json</consumes>
        <consumes_customized>true</consumes_customized>
        <default_operation_uri/>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>POST</http_method>
        <name>Get instances</name>
        <operation_script><![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

	
// 	var body = request.getBody();
	var raw = request.body.data;
	var data = request.body.data.result;
	
	var authRaw = request.getHeader('X-AuthToken');
	var authToken = "";
	if(gs.nil(authRaw)){
		response.setError(new sn_ws_err.BadRequestError('No authentication header specified.'));
		return;
	} else {
		// digest the authorization header into a usable token
		var parts = authRaw.match(/^Bearer (.*)$/i);
		if( parts.length > 1 ){
			authToken = parts[1];
		} else {
			authToken = JSON.stringify(parts);
		}
	}
	var is_token_valid = null;
	if( ! gs.nil( authToken ) ){
		is_token_valid = ( new global.TokenClient().verifySignature( authToken ) === true );		
// 		gs.info("Found token. Is token valid? {0}" , is_token_valid );
	}

	if( is_token_valid === true || is_token_valid === null ){
		response.setHeader('Content-type','application/json');
		try {
			if( data.hasOwnProperty('instances') &&
				data.hasOwnProperty('categories') && 
				data.hasOwnProperty('suppMaterials')){
				
// 				gs.info('Typeof data: {0}', typeof data);
// 				gs.info('Data contents: {0}' , JSON.stringify(data));
				var lm = new x_snc_lab_man.labManagement();
				lm.loadData( data );
				lm.updateInstances();
				response.setStatus(200);
				gs.debug("Refresh instances: complete.");
				// Checks if the attachment has changed - or is new 
				if (data.attachmentID != '' && data.attachmentID != gs.getProperty('x_snc_lab_man.remoteSponsorAttachmentID')) {
					gs.setProperty('x_snc_lab_man.remoteSponsorAttachmentID', data.attachmentID.toString());
					lm.setSponsorImage(data);
				}
			} else {
				response.setStatus(400);
				response.setBody({
					error: 'Request body missing one or more required data elements.'
				});
				gs.error('Refresh instances: data error.');
			}
		} catch(e){
			response.setStatus(500);
			response.setBody(
				{
					'error': e
				}
			);
			gs.error('Refresh instances: system error.');
		}
	} else {
		response.setStatus(403);
	}
	
	/*function pad(n, width, z) {
		z = z || '0';
		n = n + '';
		return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;
	}*/

})(request, response);]]></operation_script>
        <operation_uri>/api/x_snc_lab_man/callback/instances</operation_uri>
        <produces>application/json</produces>
        <produces_customized>true</produces_customized>
        <relative_path>/instances</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>false</requires_authentication>
        <requires_snc_internal_role>true</requires_snc_internal_role>
        <short_description>Receives health check response data</short_description>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-09-01 17:12:19</sys_created_on>
        <sys_id>269a4767c0a111107f44dea40b48038a</sys_id>
        <sys_mod_count>8</sys_mod_count>
        <sys_name>Get instances</sys_name>
        <sys_package display_value="Lab Management" source="x_snc_lab_man">f24888cc5cf400107f442a8e9a094ba4</sys_package>
        <sys_policy/>
        <sys_scope display_value="Lab Management">f24888cc5cf400107f442a8e9a094ba4</sys_scope>
        <sys_update_name>sys_ws_operation_269a4767c0a111107f44dea40b48038a</sys_update_name>
        <sys_updated_by>ice.user</sys_updated_by>
        <sys_updated_on>2024-04-22 16:46:41</sys_updated_on>
        <web_service_definition display_value="Callback">a1b53d75b5b8d5d07f44f5daf46ef6ff</web_service_definition>
        <web_service_version/>
    </sys_ws_operation>
</record_update>
